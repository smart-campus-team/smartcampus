{"version":3,"sources":["Sections/HeaderSection/HeaderSection.module.css","Sections/LandingSection/LandingSection.module.css","CommonUI/Components/Outlink.module.css","Sections/HeaderSection/Components/OutlinkButton.module.css","CommonUI/img/logos/sclogo_4.png","CommonUI/Components/Outlink.js","Sections/HeaderSection/Components/OutlinkButton.js","Sections/HeaderSection/HeaderSection.jsx","Sections/LandingSection/LandingSection.jsx","Sections/FooterSection/FooterSection.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","container","horizontalSection","logo","rightEnd","menu","menuItem","mobileMenu","icon","menuIcon","dropMenu","dropMenuActive","menuItemDropdown","resizeImage","link","outlinkButton","__webpack_require__","p","_ref","to","props","Object","objectWithoutProperties","react_default","a","createElement","assign","href","className","styles","children","OutlinkButton","Outlink","HeaderSection","_Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleMenu","setState","prevState","updateWindowDimensions","window","innerWidth","mobileView","state","inherits","createClass","key","value","addEventListener","removeEventListener","_this$state","classNames","onClick","Components_OutlinkButton","defineProperty","concat","Component","LandingSection","apply","arguments","src","require","alt","FooterSection","App","HeaderSection_HeaderSection","LandingSection_LandingSection","FooterSection_FooterSection","Boolean","location","hostname","match","WebFont","load","custom","families","urls","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bab26adb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HeaderSection_container__1-aRK\",\"horizontalSection\":\"HeaderSection_horizontalSection__3VDAn colors_boxShadow__3h3m1\",\"logo\":\"HeaderSection_logo__2CvOu\",\"rightEnd\":\"HeaderSection_rightEnd__1hJ7Z\",\"menu\":\"HeaderSection_menu__2QmlD\",\"menuItem\":\"HeaderSection_menuItem__VeN5H colors_buttonRadiusSmall__2FTks colors_subText__jv1GC colors_hoverColor__1Iucb\",\"mobileMenu\":\"HeaderSection_mobileMenu__3nVLp HeaderSection_menu__2QmlD\",\"icon\":\"HeaderSection_icon__POTZ1 icons_iconConfig__3R5lK\",\"menuIcon\":\"HeaderSection_menuIcon__1nnhT icons_menuIcon__3rzcw icons_iconPosition__1llTY\",\"dropMenu\":\"HeaderSection_dropMenu__ukq8v colors_boxShadowMenu__3Vvf3\",\"dropMenuActive\":\"HeaderSection_dropMenuActive__2rUEh\",\"menuItemDropdown\":\"HeaderSection_menuItemDropdown__COlBh colors_buttonRadiusSmall__2FTks colors_subText__jv1GC colors_hoverColor__1Iucb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LandingSection_container__3ApTQ\",\"logo\":\"LandingSection_logo__2fjGr\",\"resizeImage\":\"LandingSection_resizeImage__3jfqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Outlink_link__15ulu colors_subText__jv1GC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outlinkButton\":\"OutlinkButton_outlinkButton__3cR9I\"};","module.exports = __webpack_public_path__ + \"static/media/sclogo_4.88b3c3c7.png\";","import React from 'react'\nimport styles from './Outlink.module.css'\n\nconst link = ({ to, ...props }) => (\n    <a\n        href={to}\n        {...props}\n        className={styles.link}\n    >\n        {props.children}\n    </a>\n)\n\nexport default link","import React from 'react'\nimport Outlink from '../../../CommonUI/Components/Outlink'\n\nimport styles from './OutlinkButton.module.css'\n\nconst OutlinkButton = (props) => {\n    const { to } = props\n    return (\n        <div className={styles.outlinkButton}>\n            <Outlink\n                to={to}\n            >{props.children}</Outlink>\n        </div>\n    )\n}\n\nexport default OutlinkButton","import React, {Component} from 'react'\nimport classNames from 'classnames'\n// import styles from  './HeaderSection.css'\nimport styles from  './HeaderSection.module.css'\nimport OutlinkButton from './Components/OutlinkButton'\n\n\nexport class HeaderSection extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            mobileView: false,\n            dropMenu: false,\n        }\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    toggleMenu = () => {\n        this.setState(prevState => {\n            return {\n                dropMenu: !prevState.dropMenu,\n            }\n        })\n    }\n      \n    // To update the window dimensions in order to change the header section accordingly\n    updateWindowDimensions = () => {\n        if(window.innerWidth < 760) {\n            this.setState({\n                mobileView: true,\n            })\n        } else {\n            this.setState({\n                mobileView: false,\n                dropMenu: false,\n            })\n        }\n        // console.log('window dimensions', window.innerWidth, window.innerHeight)\n        // console.log('mobileView', this.state.mobileView)\n    }\n\n    render() {\n        const { mobileView, dropMenu } = this.state\n        return (\n            <div className={styles.container}>\n                <div className={styles.horizontalSection}>\n                    <div className={styles.logo}>\n                        <b><i>SC LOGO</i></b>\n                    </div>\n                    <div className={styles.rightEnd}>\n                        {!mobileView ?\n                            <div className={styles.menu}>\n                                <div className={styles.menuItem}>\n                                    <OutlinkButton to={'#'}>GitHub</OutlinkButton>\n                                </div>\n                                <div className={styles.menuItem}>\n                                    <OutlinkButton to={'#'}>About</OutlinkButton>\n                                </div>\n                                <div className={styles.menuItem}>\n                                    <OutlinkButton to={'#'}>Our Team</OutlinkButton>\n                                </div>\n                            </div>\n                            : (\n                                <div className={styles.mobileMenu}>\n                                    <div className={styles.icon}>\n                                    {/* <img src={} alt=\"Menu Bar\" width=\"24px\" height=\"24px\"/> */}\n                                        <span\n                                            className={classNames(styles.menuIcon, styles.icon)}\n                                            onClick={this.toggleMenu}\n                                        />\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n                {\n                    mobileView && dropMenu && (\n                        <div className={classNames(styles.dropMenu, {[`${styles.dropMenuActive}`]: dropMenu})}>\n                            <div className={styles.menuItemDropdown}>\n                                <OutlinkButton to={'#'}>GitHub</OutlinkButton>\n                            </div>\n                            <div className={styles.menuItemDropdown}>\n                                <OutlinkButton to={'#'}>About</OutlinkButton>\n                            </div>\n                            <div className={styles.menuItemDropdown}>\n                                <OutlinkButton to={'#'}>Our Team</OutlinkButton>\n                            </div>\n                        </div>\n                    )\n                }\n            </div>\n        )\n    }\n}","import React, {Component} from 'react'\nimport styles from './LandingSection.module.css'\n\nexport class LandingSection extends Component {\n    render() {\n        return (\n            <div className={styles.container}>\n                <div className={styles.logo}>\n                    <img className={styles.resizeImage} src={require(\"../../CommonUI/img/logos/sclogo_4.png\")} alt=\"SmartCampus logo\"/>\n                </div>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react'\n\nexport class FooterSection extends Component{\n    render() {\n        return (\n            <div>\n                <p>\n                </p>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\n\nimport { HeaderSection, LandingSection, FooterSection } from './Sections/index'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <HeaderSection/>\n        <LandingSection/>\n        <FooterSection/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport WebFont from 'webfontloader';\n\n WebFont.load({\n    custom: {\n      families: ['Inter', 'sans-serif'],\n      urls: ['https://rsms.me/inter/inter.css']\n    }\n  });\n\n// WebFont.load({\n//   google: {\n//     families: ['Titillium Web:300,400,700', 'sans-serif']\n//   }\n// });\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}